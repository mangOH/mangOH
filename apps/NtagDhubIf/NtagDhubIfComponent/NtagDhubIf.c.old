/**
 * @file
 *
 * This sample app reads state of the NTAG FD pin (GPIO23 on mangOH yellow). If it is set
 * then the NFC field has been detected. It also creates a callback for field detection.
 * In all cases the the field detect (FD) causes the mangOH yellow buzzer be driven for 5 seconds.
 *
 * <HR>
 *
 * Copyright (C) Sierra Wireless, Inc. Use of this work is subject to license.
 */


#include "legato.h"
#include "interfaces.h"
#include "buzzer.h"
#include <time.h>
#include <sys/time.h>

static struct timeval tNow, tEnd ;
bool debounce = false;

// The timer used to keep the buzzer running - 5 secs.
static le_timer_Ref_t Timer = NULL;
#define BUZZER_INTERVAL		5000


// Debounce interval in seconds
#define DEBOUNCE_INTERVAL	1
const static struct timeval tLong = {DEBOUNCE_INTERVAL, 0};

static void BuzzerHandler(le_timer_Ref_t BuzzerTimerRef)
{
    le_timer_Stop(Timer);
    EnablePushHandler(false);
}

static void FdChangeCallback(bool state, void *ctx)
{

    LE_DEBUG("State change %s", state?"TRUE":"FALSE");
    int pin23 = (int) le_gpioPin23_Read();
    LE_DEBUG("Pin23 read value: %d", pin23);

    // Debounce code seems to be needed by the FD-pin circuit
    if(pin23 == 0 && !debounce) {
	LE_DEBUG("pin23 == 0 && !debounce");
	return;
    }
    else if(pin23 == 0 && debounce) {
	LE_DEBUG("pin23 == 0 && debounce");
	gettimeofday(&tNow, NULL);
	if(timercmp(&tNow, &tEnd, >)) {
	    LE_DEBUG("tNow: %ld.%06ld tEnd: %ld.%06ld\n",
		tNow.tv_sec, tNow.tv_usec,
	 	tEnd.tv_sec, tEnd.tv_usec);
	   debounce = false;
	   timerclear(&tEnd);
	}
    }
    else if(pin23 == 1 && !debounce) {
	gettimeofday (&tNow, NULL) ;
	timeradd (&tNow, &tLong, &tEnd) ;
	LE_DEBUG("pin23 == 1 && !debounce \n tNow: %ld.%06ld tLong: %ld.%06ld tEnd: %ld.%06ld\n",
		tNow.tv_sec, tNow.tv_usec,
		tLong.tv_sec, tLong.tv_usec,
		tEnd.tv_sec, tEnd.tv_usec);
	debounce = true;
	LE_ASSERT_OK(le_timer_SetMsInterval(Timer, BUZZER_INTERVAL));
	LE_ASSERT_OK(le_timer_Start(Timer));
	EnablePushHandler(true);
    }
    else if(pin23 == 1 && debounce) {
	LE_DEBUG("pin23 == 1 && debounce");
	gettimeofday(&tNow, NULL);
	if(timercmp (&tNow, &tEnd, >)) {
	    LE_DEBUG("tNow: %ld.%06ld tEnd: %ld.%06ld\n",
		tNow.tv_sec, tNow.tv_usec,
		tEnd.tv_sec, tEnd.tv_usec);
	   debounce = false;
	   timerclear(&tEnd);
	}
    }
}

static void ConfigureFdGpio()
{
    LE_DEBUG("In ConfigureFdGpio");
    /*
     *  Assumptions - on the WP76 GPIO23 on a yellow board has certain defaults set
     *		1. active_low - 0
     *		2. edge - none
     *		3. pull - down
     *		4. direction - in
     *  The NT3H2111_2211 by default sets FD to falling on the RF field - i.e. a pull-up
     *  Thus, all we need to change is pull-down to pull-up.
     */

    // Configure the field detection pin over sysfs/Legato
    LE_FATAL_IF(le_gpioPin23_EnablePullUp() != LE_OK,
                "Couldn't configure GPIO23 as a pull-up");

    le_gpioPin23_AddChangeEventHandler(LE_GPIOPIN23_EDGE_BOTH, FdChangeCallback, NULL, 0);
}

static void PinsReadConfig()
{
    LE_DEBUG("Pin 23 active = %s", le_gpioPin23_IsActive()?"true":"false");

    le_gpioPin23_Edge_t edge = le_gpioPin23_GetEdgeSense();
    if (edge == LE_GPIOPIN23_EDGE_FALLING)
    {
        LE_INFO("Pin 23 edge sense = falling");
    }
    else if (edge == LE_GPIOPIN23_EDGE_RISING)
    {
        LE_INFO("Pin 23 edge sense = rising");
    }
    else if (edge == LE_GPIOPIN23_EDGE_BOTH)
    {
        LE_INFO("Pin 23 edge sense = both");
    }
    else if (edge == LE_GPIOPIN23_EDGE_NONE)
    {
        LE_INFO("Pin 23 edge sense = none");
    }

    le_gpioPin23_Polarity_t pol = le_gpioPin23_GetPolarity();
    if (pol == LE_GPIOPIN23_ACTIVE_HIGH)
    {
        LE_INFO("Pin 23 polarity = ACTIVE_HIGH");
    }
    else
    {
        LE_INFO("Pin 23 polarity = ACTIVE_LOW");
    }

    LE_INFO("Pin 23 is input = %s", le_gpioPin23_IsInput()?"true":"false");
    LE_INFO("Pin 23 is output = %s", le_gpioPin23_IsOutput()?"true":"false");

    le_gpioPin23_PullUpDown_t pud = le_gpioPin23_GetPullUpDown();
    if (pud == LE_GPIOPIN23_PULL_DOWN)
    {
        LE_INFO("Pin 23 pull up/down = down");
    }
    else if (pud == LE_GPIOPIN23_PULL_UP)
    {
        LE_INFO("Pin 23 pull up/down = up");
    }
    else
    {
        LE_INFO("Pin 23 pull up/down = none");
    }
}

static void ConfigureBuzzer()
{
    // Configure Push Button as input and set its initial value as high
    /* LE_FATAL_IF(mangoh_pushButton_SetInput(MANGOH_PUSHBUTTON_ACTIVE_HIGH) != LE_OK,
                "Couldn't configure touch sensor as default input high");*/
    LE_DEBUG("In ConfigureBuzzer");

   FreqConfigPushHandler(1024);
   PeriodConfigPushHandler(10);
   DcOnConfigPushHandler(50);
}

COMPONENT_INIT
{

    //PinsReadConfig();
    ConfigureFdGpio();
    PinsReadConfig();
    Timer = le_timer_Create("Buzzer Timer");
    le_timer_SetRepeat(Timer, 0);
    le_timer_SetHandler(Timer, BuzzerHandler);

    ConfigureBuzzer();
}
